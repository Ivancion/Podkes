package com.example.podcastapp.data.mappers

import com.example.podcastapp.data.data_source.local.db.entity.RegionsEntity
import com.example.podcastapp.data.data_source.remote.dto.RegionsDto
import com.example.podcastapp.domain.model.Regions

fun RegionsDto.asRegions(): Regions {
    return Regions(
        ae = ae,
        al = al,
        am = am,
        ar = ar,
        at = at,
        au = au,
        az = az,
        be = be,
        bg = bg,
        bh = bh,
        bn = bn,
        bo = bo,
        br = br,
        belarus = belarus,
        bz = bz,
        ca = ca,
        ch = ch,
        cl = cl,
        cn = cn,
        co = co,
        cr = cr,
        cz = cz,
        de = de,
        dk = dk,
        dominicanRepublic = dominicanRepublic,
        dz = dz,
        ec = ec,
        ee = ee,
        eg = eg,
        es = es,
        fi = fi,
        fr = fr,
        gb = gb,
        gr = gr,
        gt = gt,
        hk = hk,
        hn = hn,
        hr = hr,
        hu = hu,
        id = id,
        ie = ie,
        il = il,
        india = india,
        iceland = iceland,
        italy = italy,
        jm = jm,
        jo = jo,
        jp = jp,
        ke = ke,
        kr = kr,
        kw = kw,
        kz = kz,
        lb = lb,
        lt = lt,
        lu = lu,
        lv = lv,
        mk = mk,
        mn = mn,
        mo = mo,
        mt = mt,
        mx = mx,
        my = my,
        ni = ni,
        nl = nl,
        no = no,
        nz = nz,
        om = om,
        pa = pa,
        pe = pe,
        ph = ph,
        pk = pk,
        pl = pl,
        pt = pt,
        py = py,
        qa = qa,
        ro = ro,
        ru = ru,
        sa = sa,
        se = se,
        sg = sg,
        si = si,
        sk = sk,
        sv = sv,
        th = th,
        tn = tn,
        tr = tr,
        tw = tw,
        ua = ua,
        us = us,
        uy = uy,
        uz = uz,
        ve = ve,
        vn = vn,
        ye = ye,
        za = za,
        zw = zw
    )
}

fun Regions.asRegionsEntity(): RegionsEntity {
    return RegionsEntity(
        ae = ae,
        al = al,
        am = am,
        ar = ar,
        at = at,
        au = au,
        az = az,
        be = be,
        bg = bg,
        bh = bh,
        bn = bn,
        bo = bo,
        br = br,
        belarus = belarus,
        bz = bz,
        ca = ca,
        ch = ch,
        cl = cl,
        cn = cn,
        co = co,
        cr = cr,
        cz = cz,
        de = de,
        dk = dk,
        dominicanRepublic = dominicanRepublic,
        dz = dz,
        ec = ec,
        ee = ee,
        eg = eg,
        es = es,
        fi = fi,
        fr = fr,
        gb = gb,
        gr = gr,
        gt = gt,
        hk = hk,
        hn = hn,
        hr = hr,
        hu = hu,
        id = id,
        ie = ie,
        il = il,
        india = india,
        iceland = iceland,
        italy = italy,
        jm = jm,
        jo = jo,
        jp = jp,
        ke = ke,
        kr = kr,
        kw = kw,
        kz = kz,
        lb = lb,
        lt = lt,
        lu = lu,
        lv = lv,
        mk = mk,
        mn = mn,
        mo = mo,
        mt = mt,
        mx = mx,
        my = my,
        ni = ni,
        nl = nl,
        no = no,
        nz = nz,
        om = om,
        pa = pa,
        pe = pe,
        ph = ph,
        pk = pk,
        pl = pl,
        pt = pt,
        py = py,
        qa = qa,
        ro = ro,
        ru = ru,
        sa = sa,
        se = se,
        sg = sg,
        si = si,
        sk = sk,
        sv = sv,
        th = th,
        tn = tn,
        tr = tr,
        tw = tw,
        ua = ua,
        us = us,
        uy = uy,
        uz = uz,
        ve = ve,
        vn = vn,
        ye = ye,
        za = za,
        zw = zw
    )
}

fun RegionsEntity.asRegions(): Regions {
    return Regions(
        ae = ae,
        al = al,
        am = am,
        ar = ar,
        at = at,
        au = au,
        az = az,
        be = be,
        bg = bg,
        bh = bh,
        bn = bn,
        bo = bo,
        br = br,
        belarus = belarus,
        bz = bz,
        ca = ca,
        ch = ch,
        cl = cl,
        cn = cn,
        co = co,
        cr = cr,
        cz = cz,
        de = de,
        dk = dk,
        dominicanRepublic = dominicanRepublic,
        dz = dz,
        ec = ec,
        ee = ee,
        eg = eg,
        es = es,
        fi = fi,
        fr = fr,
        gb = gb,
        gr = gr,
        gt = gt,
        hk = hk,
        hn = hn,
        hr = hr,
        hu = hu,
        id = id,
        ie = ie,
        il = il,
        india = india,
        iceland = iceland,
        italy = italy,
        jm = jm,
        jo = jo,
        jp = jp,
        ke = ke,
        kr = kr,
        kw = kw,
        kz = kz,
        lb = lb,
        lt = lt,
        lu = lu,
        lv = lv,
        mk = mk,
        mn = mn,
        mo = mo,
        mt = mt,
        mx = mx,
        my = my,
        ni = ni,
        nl = nl,
        no = no,
        nz = nz,
        om = om,
        pa = pa,
        pe = pe,
        ph = ph,
        pk = pk,
        pl = pl,
        pt = pt,
        py = py,
        qa = qa,
        ro = ro,
        ru = ru,
        sa = sa,
        se = se,
        sg = sg,
        si = si,
        sk = sk,
        sv = sv,
        th = th,
        tn = tn,
        tr = tr,
        tw = tw,
        ua = ua,
        us = us,
        uy = uy,
        uz = uz,
        ve = ve,
        vn = vn,
        ye = ye,
        za = za,
        zw = zw
    )
}